#!/usr/bin/env bash
# This script displays DNS A record information for subdomains of a given domain

lookup_subdomain() {
    local domain=$1
    local subdomain=$2

    result=$(dig +short "${subdomain}.${domain}" | head -n 1)

    if [[ -n "$result" ]]; then
        echo "The subdomain ${subdomain} is a A record and points to ${result}"
    else
        echo "The subdomain ${subdomain} does not exist or has no A record"
    fi
}

# Input
domain=$1
sub=$2

# Validate required domain argument
if [[ -z "$domain" ]]; then
    echo "Usage: $0 <domain> [subdomain]"
    exit 1
fi

# Case: specific subdomain provided
if [[ -n "$sub" ]]; then
    lookup_subdomain "$domain" "$sub"
else
    # Default subdomains
    for s in www lb-01 web-01 web-02; do
        lookup_subdomain "$domain" "$s"
    done
fi
get_dns_info() {
    local domain=$1
    local subdomain=$2

    # Use dig to get the ANSWER SECTION
    local answer=$(dig ${subdomain}.${domain} +noall +answer)

    # Parse record type (2nd last column) and destination (last column)
    local record_type=$(echo "$answer" | awk '{print $4}')
    local destination=$(echo "$answer" | awk '{print $5}')

    echo "The subdomain ${subdomain} is a ${record_type} record and points to ${destination}"
}
